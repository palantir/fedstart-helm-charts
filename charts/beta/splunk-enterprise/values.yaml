# Overrides for Splunk Operator sub chart
splunk-operator:
  image:
    repository: docker.io/splunk/splunk:9.1.3

  # Overrides for Splunk Operator
  splunkOperator:
    annotations:
      com.palantir.rubix.service/pod-cert: "{}"

    # Splunk Operator image
    image:
      repository: docker.io/splunk/splunk-operator:2.5.2
      pullPolicy:

  kubeRbacProxy:
    image:
      repository: quay.io/brancz/kube-rbac-proxy
      pullPolicy: IfNotPresent
      tag: "v0.16.0"

  splunkWeb:
    tls:
      combine:
        enabled: true
        schedule: "* * * * *"
        serviceTLSSecrets: []
        image: fedstart-dev.palantirapollo.com/fedstart/kubectl
        imagePullPolicy: "IfNotPresent"
        tag: 1.27.16
        imagePullSecrets: {} 
        
    service:
      enabled: false


networkPolicy:
  enabled: true

  podSelector: {}

  egress:
    enabled: false
    to: []
    ports: []

#  ingress:
#    enabled: false
#    from: []
#    ports: []
  ingress:
    enabled: true
    from:
      - namespaceSelector:
          matchExpressions:
          - key: name
            operator: In
            values:
              - fedstart-monitoring

# Image to use for Splunk pod containers. Defaults to docker.io/splunk/splunk:9.1.3
# Overrides RELATED_IMAGE_SPLUNK_ENTERPRISE environment variable in Splunk Operator manager container
image:
  repository: ""
  imagePullPolicy: ""
  imagePullSecrets: []

sva:

  # Single Server Deployment (S1)
  # reference: https://www.splunk.com/pdfs/technical-briefs/splunk-validated-architectures.pdf#page=9
  s1:

    enabled: true

    standalones: 1

  # Distributed Clustered Deployment + SHC - Single Site (C3)
  # reference: https://www.splunk.com/pdfs/technical-briefs/splunk-validated-architectures.pdf#page=14
  c3:

    enabled: false

    indexerClusters: []
    # - name: idx1
    # - name: idx2

    searchHeadClusters: []
    # - name: shc1
    # - name: shc2

  # Distributed Clustered Deployment + SHC - Multi-Site (M4)
  # reference: https://www.splunk.com/pdfs/technical-briefs/splunk-validated-architectures.pdf#page=20
  m4:

    enabled: false

    clusterManager:
      allSites: "site1"
      site: site1
      zone: us-east-1a

    indexerClusters:
      - name: idx1
        site: site1
        zone: us-east-1a

    searchHeadClusters:
      - name: shc1
        site: site1
        zone: us-east-1a

# Configure a Splunk Cluster Manager instance
clusterManager:

  # Deploy a cluster manager instance
  enabled: false

  # Specify the custom resource name
  name: "cm"

  # Specify additional labels
  additionalLabels: {}

  additionalAnnotations:
    com.palantir.rubix.service/pod-cert: '{}'

  # Splunk Smartstore configuration
  # reference: https://github.com/splunk/splunk-operator/blob/develop/docs/SmartStore.md
  smartstore: {}
    ## Example: Deploy smartstore to a clustermanager, distributes config to indexer peers
    # volumes:
    #   - name: <remote_volume_name>
    #     path: <remote_volume_path>
    #     endpoint: https://s3-<region>.amazonaws.com
    #     secretRef: <secret_store_obj>
    # indexes:
    #   - name: <index_name_1>
    #     remotePath: $_index_name
    #     volumeName: <remote_volume_name>
    #   - name: <index_name_2>
    #     remotePath: $_index_name
    #     volumeName: <remote_volume_name>
  #   - name: <index_name_3>
  #     remotePath: $_index_name
  #     volumeName: <remote_volume_name>

  # List volumes to be mounted in all pod containers
  # reference: https://kubernetes.io/docs/concepts/storage/volumes/
  volumes: []
#    - name: certs
#      secret:
#        secretName: cert-splunk-web-service
#    - name: combined-cert
#      secret:
#        secretName: cert-splunk-web-service-combined-key-cert

  # Full path or URL for a Splunk Enterprise license file
  # Ignore if deploying a license manager instance
  licenseUrl: ""

  # Full path or URL for one or more default.yml files, separated by commas
  defaultsUrl: ""

  # Specify Splunk default.yaml to override intial environment config
  defaults: {}

    ## Example: Deploy a multi-site cluster manager
    # splunk:
    #   site: site1
    #   multisite_manager: localhost
    #   all_sites: site1,site2,site3
    #   multisite_replication_factor_origin: 1
    #   multisite_replication_factor_total: 2
    #   multisite_search_factor_origin: 1
    #   multisite_search_factor_total: 2
  #   idxc:
  #     search_factor: 2
  #     replication_factor: 2

  # Full path or URL for one or more defaults.yml files specific to App install, separated by commas
  defaultsUrlApps: ""

  # List additional environment variables to passed to the Splunk instance container
  extraEnv:
#    - name: SPLUNK_HTTP_ENABLESSL
#      value: 'true'
#    - name: SPLUNK_HTTP_ENABLESSL_CERT
#      value: /mnt/certs/tls.crt
#    - name: SPLUNK_HTTP_ENABLESSL_PRIVKEY
#      value: /mnt/certs/tls.key
#    - name: SPLUNK_LAUNCH_CONF
#      value: "SPLUNK_FIPS=1"
#    - name: SPLUNKD_SSL_ENABLE
#      value: 'true'
#    - name: SPLUNKD_SSL_CA
#      value: /mnt/certs/ca.crt
#    - name: SPLUNKD_SSL_CERT
#      value: /mnt/combined-cert/combined_tls.crt
#    - name: SPLUNK_LAUNCH_CONF
#      value: "SPLUNK_FIPS=1"
    - name: SPLUNK_PASSWORD
      valueFrom:
        secretKeyRef:
          name: "{{ preprocess .Values.apollo.secrets.splunkadminpassword.k8sSecretName }}"
          key: SPLUNK_PASSWORD

  # Delay in seconds before probing liveness
  # refernece: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-command
  livenessInitialDelaySeconds: 300

  # Delay in seconds before probing readiness
  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-command
  readinessInitialDelaySeconds: 10

  # Set Probes for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/main/docs/HealthCheck.md
  startupProbe: {}
    # initialDelaySeconds: 40
  # timeoutSeconds: 30
  # periodSeconds: 30
  # failureThreshold: 12
  livenessProbe: {}
    # initialDelaySeconds: 30
  # timeoutSeconds: 30
  # periodSeconds: 30
  # failureThreshold: 3
  readinessProbe: {}
    # initialDelaySeconds: 10
  # timeoutSeconds: 5
  # periodSeconds: 5
  # failureThreshold: 3

  # Storage configuration for /opt/splunk/etc volume
  # To use a StorageClass other than your default StorageClass, specify the storageClassName
  # reference: https://github.com/splunk/splunk-operator/blob/develop/docs/StorageClass.md
  etcVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 10Gi
  # storageClassName: gp2

  # Storage configuration for /opt/splunk/var volume
  # To use a StorageClass other than your default StorageClass, specify the storageClassName
  # reference: https://github.com/splunk/splunk-operator/blob/develop/docs/StorageClass.md
  varVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 100Gi
  # storageClassName: gp2

  # Set resource requests and limits for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/develop/docs/CustomResources.md#examples-of-guaranteed-and-burstable-qos
  resources: {}
    # requests:
    #   memory: "2Gi"
    #   cpu: "4"
  # limits:
  #   memory: "12Gi"
  #   cpu: "24"

  # Specify a service account used by the Splunk instance pods
  # Default uses the Default Service Account to access the API server
  # reference: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount: ""

  # Specify Splunk instance pod tolerations
  # reference: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: []

  # Define affinity scheduling rules
  # reference: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core
  affinity: {}
    ## Example: schedule Splunk instance pod on a node in zone-1a
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: failure-domain.beta.kubernetes.io/zone
  #         operator: In
  #         values:
  #         - zone-1a

  # Configure a topology spread constraint
  #  https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  topologySpreadConstraints: []
  #  - maxSkew: <integer>
  #    minDomains: <integer> # optional; beta since v1.25
  #    topologyKey: <string>
  #    whenUnsatisfiable: <string>
  #    labelSelector: <object>
  #    matchLabelKeys: <list> # optional; alpha since v1.25
  #    nodeAffinityPolicy: [Honor|Ignore] # optional; beta since v1.26
  #    nodeTaintsPolicy: [Honor|Ignore] # optional; beta since v1.26


indexerCluster:

  enabled: false

  name: "idxc"

  additionalLabels: {}

  additionalAnnotations:
    com.palantir.rubix.service/pod-cert: '{}'

  replicaCount: 1

  volumes: []
#    - name: certs
#      secret:
#        secretName: cert-splunk-idxc-indexer-service
#    - name: combined-cert
#      secret:
#        secretName: cert-splunk-idxc-indexer-service-combined-key-cert

  licenseUrl: ""

  defaultsUrl: ""

  extraEnv:
#    - name: SPLUNK_HTTP_ENABLESSL
#      value: 'true'
#    - name: SPLUNK_HTTP_ENABLESSL_CERT
#      value: /mnt/certs/tls.crt
#    - name: SPLUNK_HTTP_ENABLESSL_PRIVKEY
#      value: /mnt/certs/tls.key
#    - name: SPLUNK_LAUNCH_CONF
#      value: "SPLUNK_FIPS=1"
#    - name: SPLUNKD_SSL_ENABLE
#      value: 'true'
#    - name: SPLUNKD_SSL_CA
#      value: /mnt/certs/ca.crt
#    - name: SPLUNKD_SSL_CERT
#      value: /mnt/combined-cert/combined_tls.crt
#    - name: SPLUNK_LAUNCH_CONF
#      value: "SPLUNK_FIPS=1"
    - name: SPLUNK_PASSWORD
      valueFrom:
        secretKeyRef:
          name: "{{ preprocess .Values.apollo.secrets.splunkadminpassword.k8sSecretName }}"
          key: SPLUNK_PASSWORD

  serviceAccount: ""

  affinity: {}


searchHeadCluster:

  enabled: true

  name: "shc"

  additionalLabels: {}

  additionalAnnotations:
    com.palantir.rubix.service/pod-cert: '{}'
    com.palantir.rubix.service.spp/v3: > 
      '{"endpoints": [
         {
           "name": "http-splunkweb", 
           "prefix": "/", 
           "domain-aliases": ["OSS"],
           "experimental": {
             "sticky-sessions":true
           }
         }
       ]}'

  replicaCount: 1

  volumes: []
#    - name: certs
#      secret:
#        secretName: cert-splunk-shc-search-head-service
#    - name: combined-cert
#      secret:
#        secretName: cert-splunk-shc-search-head-service-combined-key-cert

  licenseUrl: ""

  defaultsUrl: ""

  defaults: {}

  defaultsUrlApps: ""

  extraEnv:
#    - name: SPLUNK_HTTP_ENABLESSL
#      value: 'true'
#    - name: SPLUNK_HTTP_ENABLESSL_CERT
#      value: /mnt/certs/tls.crt
#    - name: SPLUNK_HTTP_ENABLESSL_PRIVKEY
#      value: /mnt/certs/tls.key
#    - name: SPLUNK_LAUNCH_CONF
#      value: "SPLUNK_FIPS=1"
#    - name: SPLUNKD_SSL_ENABLE
#      value: 'true'
#    - name: SPLUNKD_SSL_CA
#      value: /mnt/certs/ca.crt
#    - name: SPLUNKD_SSL_CERT
#      value: /mnt/combined-cert/combined_tls.crt
#    - name: SPLUNK_LAUNCH_CONF
#      value: "SPLUNK_FIPS=1"
    - name: SPLUNK_PASSWORD
      valueFrom:
        secretKeyRef:
          name: "{{ preprocess .Values.apollo.secrets.splunkadminpassword.k8sSecretName }}"
          key: SPLUNK_PASSWORD


  etcVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 10Gi
  # storageClassName: gp2

  varVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 100Gi
  # storageClassName: gp2

  resources: {}
    # requests:
    #   memory: "2Gi"
    #   cpu: "4"
  # limits:
  #   memory: "12Gi"
  #   cpu: "24"

  serviceAccount: ""

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: com.palantir.rubix/instance-group
                operator: In
                values:
                  - fedstart
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: splunk-enterprise
            topologyKey: topology.kubernetes.io/zone
          weight: 100
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - search-head
          topologyKey: kubernetes.io/hostname


monitoringConsole:

  enabled: false

  name: "mc"

  namespaceOverride: ""

  additionalLabels: {}

  additionalAnnotations: {}

  volumes: []

  licenseUrl: ""

  defaultsUrl: ""

  defaults: {}

  defaultsUrlApps: ""

  extraEnv: []
  # - name:
  #   value:

  livenessInitialDelaySeconds: 300

  readinessInitialDelaySeconds: 10

  # Set Probes for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/main/docs/HealthCheck.md
  startupProbe: {}
    # initialDelaySeconds: 40
  # timeoutSeconds: 30
  # periodSeconds: 30
  # failureThreshold: 12
  livenessProbe: {}
    # initialDelaySeconds: 30
  # timeoutSeconds: 30
  # periodSeconds: 30
  # failureThreshold: 3
  readinessProbe: {}
    # initialDelaySeconds: 10
  # timeoutSeconds: 5
  # periodSeconds: 5
  # failureThreshold: 3

  etcVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 10Gi
  # storageClassName: gp2

  varVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 100Gi
  # storageClassName: gp2

  resources: {}
    # requests:
    #   memory: "2Gi"
    #   cpu: "4"
  # limits:
  #   memory: "12Gi"
  #   cpu: "24"

  serviceAccount: ""

  # ServiceTemplate is a template used to create Kubernetes services
  serviceTemplate: {}

  tolerations: []

  affinity: {}

  # Configure a topology spread constraint
  #  https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  topologySpreadConstraints: []
  #  - maxSkew: <integer>
  #    minDomains: <integer> # optional; beta since v1.25
  #    topologyKey: <string>
  #    whenUnsatisfiable: <string>
  #    labelSelector: <object>
  #    matchLabelKeys: <list> # optional; alpha since v1.25
  #    nodeAffinityPolicy: [Honor|Ignore] # optional; beta since v1.26
  #    nodeTaintsPolicy: [Honor|Ignore] # optional; beta since v1.26

licenseManager:

  enabled: false

  name: "lm"

  namespaceOverride: ""

  additionalLabels: {}

  additionalAnnotations: {}

  appRepo:
    appsRepoPollIntervalSeconds:
    defaults:
      volumeName:
      scope:
    appSources:
      - name:
        location:
        # options (local|cluster|premiumApps) default local
        scope:
          # only if scope is set to premiumApps
          premiumAppsProps:
            type: enterpriseSecurity
            esDefaults:
              # options are ignore, strict, auto. default value is strict
              sslEnablement:
    volumes:
      - name:
        storageType:
        provider:
        path:
        endpoint:
        region:
        secretRef:

  volumes: []
  ## Example: mounting volume containing license in Splunk instance pod container
  # - name: licenses
  #   configMap:
  #     name: splunk-licenses

  licenseUrl: ""
  ## Example: using mounted volume to specify license file path
  # licenseUrl: /mnt/licenses/enterprise.lic

  defaultsUrl: ""

  defaults: {}

  defaultsUrlApps: ""

  extraEnv: []
  # - name:
  #   value:

  livenessInitialDelaySeconds: 300

  readinessInitialDelaySeconds: 10

  # Set Probes for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/main/docs/HealthCheck.md
  startupProbe: {}
    # initialDelaySeconds: 40
  # timeoutSeconds: 30
  # periodSeconds: 30
  # failureThreshold: 12
  livenessProbe: {}
    # initialDelaySeconds: 30
  # timeoutSeconds: 30
  # periodSeconds: 30
  # failureThreshold: 3
  readinessProbe: {}
    # initialDelaySeconds: 10
  # timeoutSeconds: 5
  # periodSeconds: 5
  # failureThreshold: 3

  etcVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 10Gi
  # storageClassName: gp2

  varVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 100Gi
  # storageClassName: gp2

  resources: {}
    # requests:
    #   memory: "2Gi"
    #   cpu: "4"
  # limits:
  #   memory: "12Gi"
  #   cpu: "24"

  serviceAccount: ""

  # ServiceTemplate is a template used to create Kubernetes services
  serviceTemplate: {}

  tolerations: []

  affinity: {}

  # Configure a topology spread constraint
  #  https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  topologySpreadConstraints: []
  #  - maxSkew: <integer>
  #    minDomains: <integer> # optional; beta since v1.25
  #    topologyKey: <string>
  #    whenUnsatisfiable: <string>
  #    labelSelector: <object>
  #    matchLabelKeys: <list> # optional; alpha since v1.25
  #    nodeAffinityPolicy: [Honor|Ignore] # optional; beta since v1.26
  #    nodeTaintsPolicy: [Honor|Ignore] # optional; beta since v1.26

standalone:

  enabled: false

  name: "stdln"

  namespaceOverride: ""

  additionalLabels: {}

  additionalAnnotations: {}

  replicaCount: 1

  smartstore: {}
    # defaults:
    #   volumeName:
    # indexes:
    #   - name:
    #     volumeName:
    #     remotePath:
    # volumes:
    #   - name:
  #     path:
  #     endpoint:
  #     secretRef:
  volumes:
    - name: certs
      secret:
        secretName: cert-splunk-web-service
    - name: cert-splunk-web-service-combined-key-cert
      secret:
        secretName: cert-splunk-web-service-combined-key-cert

  licenseUrl: ""

  defaultsUrl: ""

  defaults:
    server:
      conf:
        - key: server
          value:
            directory: /opt/splunk/etc/system/local
            content:
              sslConfig:
                sslVerifyServerCert: 'true'
                sslVerifyServerName: 'true'

  defaultsUrlApps: ""

  extraEnv:
    - name: SPLUNK_HTTP_ENABLESSL
      value: 'true'
    - name: SPLUNK_HTTP_ENABLESSL_CERT
      value: /mnt/certs/tls.crt
    - name: SPLUNK_HTTP_ENABLESSL_PRIVKEY
      value: /mnt/certs/tls.key
    - name: SPLUNKD_SSL_ENABLE
      value: 'true'
    - name: SPLUNKD_SSL_CA
      value: /mnt/tls-external-ca-bundle/ca.pem
    - name: SPLUNKD_SSL_CERT
      value: /mnt/combined-cert/combined_tls.crt
    - name: SPLUNK_LAUNCH_CONF
      value: "SPLUNK_FIPS=1"
    - name: SPLUNK_PASSWORD
      valueFrom:
        secretKeyRef:
          name: "{{ preprocess .Values.apollo.secrets.splunkadminsecret.k8sSecretName }}"
          key: SPLUNK_PASSWORD

  livenessInitialDelaySeconds: 300

  readinessInitialDelaySeconds: 10

  # Set Probes for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/main/docs/HealthCheck.md
  startupProbe: {}
    # initialDelaySeconds: 40
  # timeoutSeconds: 30
  # periodSeconds: 30
  # failureThreshold: 12
  livenessProbe: {}
    # initialDelaySeconds: 30
  # timeoutSeconds: 30
  # periodSeconds: 30
  # failureThreshold: 3
  readinessProbe: {}
    # initialDelaySeconds: 10
  # timeoutSeconds: 5
  # periodSeconds: 5
  # failureThreshold: 3

  etcVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 10Gi
  # storageClassName: gp2

  varVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 100Gi
  # storageClassName: gp2

  resources: {}
    # requests:
    #   memory: "2Gi"
    #   cpu: "4"
  # limits:
  #   memory: "12Gi"
  #   cpu: "24"

  serviceAccount: ""

  # ServiceTemplate is a template used to create Kubernetes services
  serviceTemplate: {}

  tolerations: []

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: com.palantir.rubix/instance-group
                operator: In
                values:
                  - fedstart
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: splunk-enterprise
            topologyKey: topology.kubernetes.io/zone
          weight: 100
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - splunk-enterprise
          topologyKey: kubernetes.io/hostname

  # Configure a topology spread constraint
  #  https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  topologySpreadConstraints: []
  #  - maxSkew: <integer>
  #    minDomains: <integer> # optional; beta since v1.25
  #    topologyKey: <string>
  #    whenUnsatisfiable: <string>
  #    labelSelector: <object>
  #    matchLabelKeys: <list> # optional; alpha since v1.25
  #    nodeAffinityPolicy: [Honor|Ignore] # optional; beta since v1.26
  #    nodeTaintsPolicy: [Honor|Ignore] # optional; beta since v1.26

# Array with extra yaml to deploy with the chart. Evaluated as a template
extraManifests: []
# extraManifests:
#  - apiVersion: cloud.google.com/v1beta1
#    kind: BackendConfig
#    metadata:
#      name: "{{ .Release.Name }}-test"
#    spec:
#      securityPolicy:
#        name: "gcp-cloud-armor-policy-test"
